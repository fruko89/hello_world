Given an array of integers, every element appears three times except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

public class Solution {
    public int singleNumber(int[] A) {
        int result = 0;
        for (int bitIndex = 0; bitIndex < 32; bitIndex++) {
            
            int bit = 0;
            for (int i = 0; i < A.length; i++) {
                bit += ((A[i] >> bitIndex) & 1);
            }
            
            result |= ((bit % 3) << bitIndex);
        }
        return result;
    }
}
