// Write a program to find the node at which the intersection of two singly linked lists begins.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        ListNode n1 = headA;
        int size1 = 0;
        
        while(n1 != null){
            size1++;
            n1 = n1.next;
        }
        
        ListNode n2 = headB;
        int size2 = 0;
        
        while(n2 != null){
            size2++;
            n2 = n2.next;
        }
        
        ListNode runner = null;
        ListNode backer = null;
        int diff = Math.abs(size1 - size2);
        
        if (size1 >= size2){
          runner = headA;
          backer = headB;
        } else {
          runner = headB;
          backer = headA;
        }
         
        for (int i = 0; i < diff; i++){
            runner = runner.next;
        }
        
        while(runner != backer && runner != null && backer != null){
            runner = runner.next;
            backer = backer.next;
        }
        
        return runner;
    }
}
