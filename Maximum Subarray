Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [−2,1,−3,4,−1,2,1,−5,4],
the contiguous subarray [4,−1,2,1] has the largest sum = 6.

public class Solution {
    public int maxSubArray(int[] A) {
        if (A == null || A.length == 0) {
            return Integer.MIN_VALUE;
        }
        
        if (A.length == 1) {
            return A[0];
        }
        
        int localMax = A[0];
        int globalMax = A[0];
        
        for(int i = 1; i < A.length; i++) {
            localMax = Math.max(A[i], localMax + A[i]);
            globalMax = Math.max(localMax, globalMax);
        }
        
        return globalMax;
    }
}
