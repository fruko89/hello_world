// Write a program to move the full ordered stack from the first tower to the third tower in towers on Hanoi. 

import java.util.Stack;;

public class Tower<T> {

	private Stack<T> disks;
	
	public Tower(){
		disks = new Stack<T>();
	}
	
	public Stack<T> getDisks(){
		return disks;
	}
	
	public void push(T i){
		disks.push(i);
	}
	
	public void pop(){
		disks.pop();
	}
	
	public void popAndMoveto(Tower<T> destination){
		T stackBase = disks.pop();
		destination.push(stackBase);
	}
	
	private void moveDisks(int n, Tower<T> destination, Tower<T> buffer){
		if( n <= 0){
			return;
		}
		moveDisks(n - 1, buffer, destination);
		popAndMoveto(destination);
		buffer.moveDisks(n - 1, destination, this);
	}
	
	public void moveDisks(Tower<T> destination, Tower<T> buffer){
		moveDisks(disks.size(), destination, buffer);
	}
	
	public String toString(){
		return disks.toString();
	}
	
	public static void main(String[] args) {
		Tower<Integer> one = new Tower<Integer> ();
		one.push(1);
		one.push(2);
		one.push(3);
		one.push(4);
		
		Tower<Integer> two = new Tower<Integer> ();
		Tower<Integer> three = new Tower<Integer> ();
		
		one.moveDisks(three, two);
		
		System.out.println(one);
		System.out.println(two);
		System.out.println(three);
	}

}

