Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        if (l1 == null && l2 == null) {
            return null;
        } else if (l1 == null) {
            return l2;
        } else if (l2 == null) {
            return l1;
        } 
        
        ListNode n1 = l1;
        ListNode n2 = l2;
        
        ListNode newHead = (n1.val < n2.val) ? n1 : n2;
        
        while (true) {
            if (n2 == null) {
                break;
            }
            ListNode prev1 = null;
            while (n1 != null && n1.val < n2.val) {
                prev1 = n1;
                n1 = n1.next;
            }
            if (prev1 != null) {
                prev1.next = n2;
            }
            
            if (n1 == null) {
                break;
            }
            ListNode prev2 = null;
            while (n2 != null && n2.val <= n1.val) {
                prev2 = n2;
                n2 = n2.next;
            }
            if (prev2 != null) {
                prev2.next = n1;
            }
        }
        
        return newHead;
    }
}
