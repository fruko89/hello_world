/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isValidBST(TreeNode root) {
        return isValidOrder(root, new Stack<Integer>());
    }
    
    private boolean isValidOrder(TreeNode root, Stack<Integer> stack) {
        if (root == null) {
            return true;
        }
        
        boolean checkLeft = isValidOrder(root.left, stack);
        if (!stack.isEmpty() && stack.peek() >= root.val) {
            return false;
        } else {
            stack.push(root.val);
        }
        boolean checkRight = isValidOrder(root.right, stack);
        return checkLeft && checkRight;
        
    }
}
