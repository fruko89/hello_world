Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null){
            return null;
        }
        
        HashSet<Integer> nodes = new HashSet<Integer>();    
        ListNode n = head;
        ListNode prev = head;
    
        while(n != null){
            if(!nodes.contains(n.val)){
                nodes.add(n.val);
                prev = n;
            } else {
                prev.next = n.next;
            }
            
            n = n.next;
        }
        
        return head;
        
    }
}
