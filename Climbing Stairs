You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

public class Solution {
    
    private int[] fib = new int[47];
    
    public int climbStairs(int n) {
        return fibonacci(n);
    }
    
    private int fibonacci(int n){
        if (n == 1) {
            return 1;
        }
        if (n == 2) {
            return 2;
        }
        
        if (fib[n] != 0) {
            return fib[n];
        } 
        
        fib[n] = fibonacci(n - 1) + fibonacci(n - 2);
        return fib[n];
    }
}
