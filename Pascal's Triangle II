Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> row = new ArrayList<Integer>();
        long nCk = 1;
        for(int k = 0; k <= rowIndex; k++){
            row.add((int)nCk);
            nCk = (nCk*(rowIndex-k))/(k+1);
        }
        return row;
    }
}
