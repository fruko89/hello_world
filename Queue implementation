// dequeue, enqueue

public class Queue {
	
	private Node first, last;
	private int size;

	public Queue(){
		first = last = null;
		size = 0;
	}
	
	public int getSize(){
		return size;
	}
	
	public Node getFirst(){
		return first;
	}
	
	public Node getLast(){
		return last;
	}
	
	public Queue(Node f){
		first = last = f;
		size = 1;
	}
	
	public void enqueue(int val){
		
		Node n = new Node(val);
		if(first == null){
			first = last = n;
		}
		else{
			last.setNext(n);
			last = last.getNext();
		}
		size++;
	}
	
	public Node dequeue(){
		if(first == null){
			return null;
		}
		else{
			Node n = first;
			first = first.getNext();
			size--;
			return n;
			
		}
	}
}


class Node {

	private Node next;
	private int value;
	
	public Node(int val){
		value = val;
	}
	
	public Node getNext(){
		return next;
	}
	
	public void setNext(Node n){
		next = n;
	}
	
	public int getValue(){
		return value;
	}
	
	public void setValue(int val){
		value = val;
	}
}

